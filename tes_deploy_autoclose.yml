---
- hosts: all
  gather_facts: False
  become: yes
#  user: isadmin
  #ansible-playbook -i ../hosts/it_host.yaml deploy_docker_discount.yml -K
  vars:
    remote_remove_only: false
    remote_remove_args: '--rmi all --remove-orphans'
    etcparking_login_registry: 'registry.gitlab.com'
    etcparking_login_user: 'dgutierrez'
    etcparking_login_pass: 'f2k_bYARRVGe2doynDpc'
    docker_old_ver: 3.0.5
    docker_new_ver: 3.0.6
    force_recreation: false
    directory_deploy_path: /usr/local/share/etc-parking/microservice_autoclose
    autoclose_deploy_path: /usr/local/share/etc-parking/microservice_autoclose/docker-compose.yml
    microservice_name: parking_autoclose
    images_name: libautoclose
    commands_bash: docker-compose
    docker_yml: docker-compose.yml

  tasks:
    # - name: read vars
    #   include_vars: '{{ item }}'
    #   with_first_found:
    #     - files:
    #         - "vars_discount.yml"
    #       paths: "collections/"

    - name: Set fact for local docker-compose.yml
      set_fact: local_docker_compose='{{ directory_deploy_path }}'
      register: msg_print_local_path

#    - name: Print Files
#      debug:
#        msg:
#        - "Local Path - Later: {{ msg_print_local_path }}"

    - name: Get infos on container Discount
      docker_container_info:
        name: "{{microservice_name}}"
      register: result_container

    - name: Does container exist?
      debug:
        msg: "The container {{ 'exists' if result_container.exists else 'does not exist' }}"

 #   - name: Print information about container
 #     debug:
 #       var: result_container.container
 #     when: result_container.exists


    - name: View all images
      #shell: imagesdockers=docker images | grep "{{microservice_name}}" | awk '{print $3}'
      shell: docker images | grep "{{images_name}}" | awk '{print $3}'
      register: allimagesdockers

    - name: Print All Images
      debug:
        msg:
        - "View Images: {{ allimagesdockers.stdout_lines }}"

    #   #Valid docker up
    # - name: Make sure compose service is up
    #   docker_compose:
    #     project_src: "{{ docker_compose_path }}"
    #     files:
    #       - "{{ moduledocker }}-compose.yml"
    #     state: present
    #     register: docker_ms_status

    # - name: Print MS docker status
    #   debug:
    #     msg:
    #     - "Docker Status: {{ docker_ms_status }}"
    - name: Change shell sed -i
 #     become: yes
      shell: "sudo sed -i 's/{{images_name}}:[0-9].[0-9].[0-9]/{{images_name}}:{{docker_new_ver}}/g' {{autoclose_deploy_path}}"
      ignore_errors: true

    - name: Remove Loggins Before
      shell: 'docker logout registry.gitlab.com'
      register: logout_gitlab

    - name: Print Logout before
      debug:
        msg:
        - "Logout Gitlab: {{ logout_gitlab }}"

    - name: Delete remote docker stack
      file:
        path: '{{ directory_deploy_path }}'
        state: absent
      when: remote_remove_only

    - name: Login in to remote docker registry
      shell: docker login -p {{ etcparking_login_pass }} -u {{ etcparking_login_user }} {{ etcparking_login_registry }}
      when: etcparking_login_pass is defined and etcparking_login_user is defined and not remote_remove_only
      register: response_login_gitlab

    - name: Print Login
      debug:
        msg:
        - "Login Gitlab: {{ response_login_gitlab }}"

    - name: Pull images from docker-compose remotely
      shell: '{{commands_bash}} -f {{docker_yml}} pull'
      args:
        chdir: '{{ directory_deploy_path }}'
      register: pull_gitlab
      #when: remote_pull_images and not remote_remove_only

    - name: Pull Gitlab
      debug:
        msg:
        - "Pull Gitlab: {{ pull_gitlab }}"

    - name: Docker down stack remotely
      shell: '{{commands_bash}} -f {{docker_yml}} down {{ remote_remove_args }}'
      args:
        chdir: '{{ directory_deploy_path }}'
      when: remote_remove_only

    - name: Delete docker stack remotely
      file:
        path: '{{ remote_deploy_path }}'
        state: absent
      when: remote_remove_only

    - name: Start docker-compose up stack remotely
      shell: '{{commands_bash}} -f {{docker_yml}} up -d'
      args:
        chdir: '{{ directory_deploy_path }}'
      when: not remote_remove_only
      register: images_up

[2023-09-28T16:14:53,030] INFO  web.requests "GET /menu/homeAjax" 192.168.240.254 https mgutierrez form 8 ? [application/json;charset=utf-8] (Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36)
    - name: Docker UP remotely
      debug:
        msg:
        - "Docker UP: {{ images_up }}"

    - name: Delete images stack remotely
      shell: docker images -a | grep "{{images_name}}" | grep "{{ item }}" | awk '{ print $3; }' | xargs docker rmi
      register: images_deleted_info

      loop:
      - 3.0.5

      failed_when: "'error' in images_deleted_info.stderr"

    - debug:
        msg: "{{ item.stderr }}"
      loop: "{{ images_deleted_info.results }}"

    - name: Fail if error in command output
      fail:
        msg: "Not a valid command. Make sure the data model"

      when: "'Error' in  item.stderr "
      loop: "{{ images_deleted_info.results }}"


    # - name: Test if fixture is running
    #   uri:
    #     url: http://{{ ansible_hostname }}:8080
    #   register: http_response

    # - name: Fail, if fixture is not running
    #   fail:
    #     msg: "Fixture is not running..."
    #   when: http_response.status != 200

#    image: registry.gitlab.com/etc3/etc-parking/parking_discounts/parking_discounts:2.7.6
